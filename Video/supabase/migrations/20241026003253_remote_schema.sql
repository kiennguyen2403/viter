

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_tle";






CREATE EXTENSION IF NOT EXISTS "supabase@dbdev" WITH SCHEMA "public";






CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "plpgsql@pgmq" WITH SCHEMA "public";






CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






CREATE EXTENSION IF NOT EXISTS "http" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "wrappers" WITH SCHEMA "extensions";






CREATE TYPE "public"."file_type" AS ENUM (
    'TEXT',
    'AUDIO',
    'IMAGE',
    'VIDEO'
);


ALTER TYPE "public"."file_type" OWNER TO "postgres";


CREATE TYPE "public"."meeting_status" AS ENUM (
    'IDLE',
    'LIVE',
    'END'
);


ALTER TYPE "public"."meeting_status" OWNER TO "postgres";


CREATE TYPE "public"."participate" AS ENUM (
    'PENDING',
    'DECLINE',
    'ACCEPT',
    'STAND_BY',
    'LIVE',
    'LEAVE'
);


ALTER TYPE "public"."participate" OWNER TO "postgres";


CREATE TYPE "public"."privacy" AS ENUM (
    'PRIVATE',
    'TEAM',
    'PUBLIC'
);


ALTER TYPE "public"."privacy" OWNER TO "postgres";


CREATE TYPE "public"."role" AS ENUM (
    'USER',
    'EMPLOYER',
    'EMPLOYEE',
    'ADMIN'
);


ALTER TYPE "public"."role" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "pgmq"."a_code_execution" (
    "msg_id" bigint NOT NULL,
    "read_ct" integer DEFAULT 0 NOT NULL,
    "enqueued_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "archived_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "vt" timestamp with time zone NOT NULL,
    "message" "jsonb"
);


ALTER TABLE "pgmq"."a_code_execution" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "pgmq"."q_code_execution" (
    "msg_id" bigint NOT NULL,
    "read_ct" integer DEFAULT 0 NOT NULL,
    "enqueued_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "vt" timestamp with time zone NOT NULL,
    "message" "jsonb"
);


ALTER TABLE "pgmq"."q_code_execution" OWNER TO "postgres";


ALTER TABLE "pgmq"."q_code_execution" ALTER COLUMN "msg_id" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "pgmq"."q_code_execution_msg_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."chat" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "content" "text",
    "meetingId" "uuid",
    "userId" bigint,
    "value" "text"
);


ALTER TABLE "public"."chat" OWNER TO "postgres";


ALTER TABLE "public"."chat" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."chats_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."company" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "location" "text",
    "description" "text"
);


ALTER TABLE "public"."company" OWNER TO "postgres";


ALTER TABLE "public"."company" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."company_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."meeting" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "description" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "ended_at" timestamp without time zone,
    "status" "public"."meeting_status",
    "title" "text"
);


ALTER TABLE "public"."meeting" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."note" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "privacy" "public"."privacy",
    "userId" bigint,
    "content" "text"
);


ALTER TABLE "public"."note" OWNER TO "postgres";


ALTER TABLE "public"."note" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."note_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."participant" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "userId" bigint,
    "meetingId" "uuid",
    "status" "public"."participate"
);


ALTER TABLE "public"."participant" OWNER TO "postgres";


ALTER TABLE "public"."participant" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."participant_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."recording" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "meetingId" "uuid",
    "bucket" "text",
    "name" "text"
);


ALTER TABLE "public"."recording" OWNER TO "postgres";


ALTER TABLE "public"."recording" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."recording_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."user" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "role" "public"."role" DEFAULT 'USER'::"public"."role",
    "companyId" bigint,
    "token_identifier" "text"
);


ALTER TABLE "public"."user" OWNER TO "postgres";


ALTER TABLE "public"."user" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "pgmq"."a_code_execution"
    ADD CONSTRAINT "a_code_execution_pkey" PRIMARY KEY ("msg_id");



ALTER TABLE ONLY "pgmq"."q_code_execution"
    ADD CONSTRAINT "q_code_execution_pkey" PRIMARY KEY ("msg_id");



ALTER TABLE ONLY "public"."chat"
    ADD CONSTRAINT "chats_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."company"
    ADD CONSTRAINT "company_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."meeting"
    ADD CONSTRAINT "meeting_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."note"
    ADD CONSTRAINT "note_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."participant"
    ADD CONSTRAINT "participant_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."recording"
    ADD CONSTRAINT "recording_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."user"
    ADD CONSTRAINT "user_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."user"
    ADD CONSTRAINT "user_token_identifier_key" UNIQUE ("token_identifier");



CREATE INDEX "archived_at_idx_code_execution" ON "pgmq"."a_code_execution" USING "btree" ("archived_at");



CREATE INDEX "q_code_execution_vt_idx" ON "pgmq"."q_code_execution" USING "btree" ("vt");



ALTER TABLE ONLY "public"."chat"
    ADD CONSTRAINT "chats_meetingId_fkey" FOREIGN KEY ("meetingId") REFERENCES "public"."meeting"("id");



ALTER TABLE ONLY "public"."chat"
    ADD CONSTRAINT "chats_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."user"("id");



ALTER TABLE ONLY "public"."note"
    ADD CONSTRAINT "note_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."user"("id");



ALTER TABLE ONLY "public"."participant"
    ADD CONSTRAINT "participant_meetingId_fkey" FOREIGN KEY ("meetingId") REFERENCES "public"."meeting"("id");



ALTER TABLE ONLY "public"."participant"
    ADD CONSTRAINT "participant_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."user"("id");



ALTER TABLE ONLY "public"."recording"
    ADD CONSTRAINT "recording_meetingId_fkey" FOREIGN KEY ("meetingId") REFERENCES "public"."meeting"("id");



ALTER TABLE ONLY "public"."user"
    ADD CONSTRAINT "user_companyId_fkey" FOREIGN KEY ("companyId") REFERENCES "public"."company"("id");





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."chat";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."meeting";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."participant";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."recording";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."user";



GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";




















































































































































































































































































































































































GRANT SELECT ON TABLE "pgmq"."a_code_execution" TO "pg_monitor";



GRANT SELECT ON TABLE "pgmq"."q_code_execution" TO "pg_monitor";



GRANT SELECT ON SEQUENCE "pgmq"."q_code_execution_msg_id_seq" TO "pg_monitor";












GRANT ALL ON TABLE "public"."chat" TO "anon";
GRANT ALL ON TABLE "public"."chat" TO "authenticated";
GRANT ALL ON TABLE "public"."chat" TO "service_role";



GRANT ALL ON SEQUENCE "public"."chats_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."chats_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."chats_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."company" TO "anon";
GRANT ALL ON TABLE "public"."company" TO "authenticated";
GRANT ALL ON TABLE "public"."company" TO "service_role";



GRANT ALL ON SEQUENCE "public"."company_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."company_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."company_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."meeting" TO "anon";
GRANT ALL ON TABLE "public"."meeting" TO "authenticated";
GRANT ALL ON TABLE "public"."meeting" TO "service_role";



GRANT ALL ON TABLE "public"."note" TO "anon";
GRANT ALL ON TABLE "public"."note" TO "authenticated";
GRANT ALL ON TABLE "public"."note" TO "service_role";



GRANT ALL ON SEQUENCE "public"."note_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."note_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."note_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."participant" TO "anon";
GRANT ALL ON TABLE "public"."participant" TO "authenticated";
GRANT ALL ON TABLE "public"."participant" TO "service_role";



GRANT ALL ON SEQUENCE "public"."participant_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."participant_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."participant_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."recording" TO "anon";
GRANT ALL ON TABLE "public"."recording" TO "authenticated";
GRANT ALL ON TABLE "public"."recording" TO "service_role";



GRANT ALL ON SEQUENCE "public"."recording_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."recording_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."recording_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."user" TO "anon";
GRANT ALL ON TABLE "public"."user" TO "authenticated";
GRANT ALL ON TABLE "public"."user" TO "service_role";



GRANT ALL ON SEQUENCE "public"."user_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "pgmq" GRANT SELECT ON SEQUENCES  TO "pg_monitor";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "pgmq" GRANT SELECT ON TABLES  TO "pg_monitor";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
